{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/91205dbc-505c-444e-a313-b0de10c56f5c')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/91205dbc-505c-444e-a313-b0de10c56f5c')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2023-12-01-preview",
            "properties": {
                "displayName": "POC - Microsoft Intune Policy Created and/or Assigned - Was this Verified by CAB",
                "description": "erify Authorization\n\nApproval Records: Check for documentation or tickets that authorize the change.\nResponsible Teams: Confirm with the responsible team (e.g., IT, network, or security team) that the change was planned and implemented intentionally.\nChange Control Policy: Ensure the change adheres to the organization's change management process.\n\nAssess Security Implications\nRisk Analysis: Evaluate the impact of the configuration change on security:\nDoes it create new vulnerabilities or weaken existing protections?\nDoes it allow unauthorized access or expose sensitive data?\n\nTest Environment Validation: Confirm whether the change was tested in with Pilot Users before the change was made.\n\nMitigate Issues (if needed)\nUnauthorized or Risky Changes:\nRevert the configuration to its previous state immediately.",
                "severity": "Medium",
                "enabled": true,
                "query": "IntuneAuditLogs\n| extend PropertiesObject = parse_json(Properties)\n| extend actorObject = parse_json(PropertiesObject.Actor)\n| extend targetsObject = parse_json(PropertiesObject.TargetDisplayNames)\n| extend activityString = case(\n            PropertiesObject.ActivityType == 0, \"Create\", \n            PropertiesObject.ActivityType == 1, \"Delete\",\n            PropertiesObject.ActivityType == 2, \"Patch\",\n            PropertiesObject.ActivityType == 3, \"Action\",\n            PropertiesObject.ActivityType == 4, \"SetReference\", \n            PropertiesObject.ActivityType == 5, \"RemoveReference\", \n            PropertiesObject.ActivityType == 6, \"Get\", \n            PropertiesObject.ActivityType == 7, \"Search\",\n            \"Other\"\n            )\n| project TimeGenerated, PolicyName=targetsObject[0], SourceSystem, OperationName, activityString, ResultType, Properties, UPN=actorObject.UPN\n| where activityString == \"Create\" and OperationName !contains \"ClientCertificate\" and OperationName contains \"Create DeviceConfigurationAssignment\" or OperationName contains \"Create DeviceConfiguration\" or OperationName contains \"Create DeviceManagementConfigurationPolicyAssignment\"\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H5M",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "startTimeUtc": null,
                "tactics": [],
                "techniques": [],
                "subTechniques": [],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": {
                    "ActivityString": "activityString",
                    "OperationName": "OperationName",
                    "PolicyName": "PolicyName",
                    "SourceSystem": "SourceSystem",
                    "ResultType": "ResultType"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "Name",
                                "columnName": "UPN"
                            }
                        ]
                    }
                ],
                "sentinelEntitiesMappings": null,
                "templateVersion": null
            }
        }
    ]
}